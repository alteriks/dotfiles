# vim ft=sh

arpscan() {
  ARPSCAN_IP=$1
  if [[ -z $ARPSCAN_IP ]]; then
    ARPSCAN_IP=192.168.1.0/24
  fi
  sudo nmap -sP $ARPSCAN_IP | awk '/Nmap scan report for/{printf $5;}/MAC Address:/{print " => "$3;}' | sort
}

git() {
    if [[ $@ == "diffmeld" ]]; then
        command git difftool -t meld
    else
        command git "$@"
    fi
}

rga-fzf() {
  RG_PREFIX="rga --files-with-matches"
  local file
  file="$(
  FZF_DEFAULT_COMMAND="$RG_PREFIX '$1'" \
    fzf --sort --preview="[[ ! -z {} ]] && rga --pretty --context 5 {q} {}" \
    --phony -q "$1" \
    --bind "change:reload:$RG_PREFIX {q}" \
    --preview-window="70%:wrap"
    )" &&
      echo "opening $file" &&
      xdg-open "$file"
}

# systemctl start/stop && status
sc() {
  name="${@:(2)}";
  echo "COMMAND: ${1}, NAME: ${name}";
  systemctl "${1}" ${name};
  systemctl status ${name};
}

step-cli-ca() { 
  step-cli ca certificate $1 $1.crt $1.key --not-after=17520h 
}

test_ip_port() {
  while read -r ip port; do
    if [[ -z ${port} ]]; then
      port=22
    fi
    if [[ -z ${ip} ]]; then
      echo Exiting...
      return
      # /dev/tcp/ can resolve DNS names
      # elif [[ ! $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
      #   ip=$( dig +short ${ip} )
    fi
    if timeout 4 bash -c "cat < /dev/null >/dev/tcp/${ip}/${port}"; then
      echo -e "${ip}:${port}\tSuccess"
    else
      echo -e "${ip}:${port}\tFailure"
    fi
  done < "${1:-/dev/stdin}"
}

timezsh() {
  shell=${1-$SHELL}
  for i in $(seq 1 10); do 
    /usr/bin/time -p $shell -i -c exit; 
  done
}

#https://wiki.archlinux.org/index.php/Systemd/User#Kill_user_processes_on_logout
tmux() {
  if [[ $# == 0 ]]; then
    TMUX_SESSION_COUNT=$(/usr/bin/tmux list-sessions 2>/dev/null |grep -c window)
    if [[ $TMUX_SESSION_COUNT == 0 ]]; then
      systemd-run --scope --user /usr/bin/tmux 
    elif [[ $TMUX_SESSION_COUNT == 1 ]]; then
      /usr/bin/tmux attach-session
    else
      /usr/bin/tmux list-session
    fi
  else
    /usr/bin/tmux $@
  fi
}

qrcode() {
  echo $1 | qrencode -t ASCII -o - | sed 's/#/â–ˆ/g'
  #:w ++enc=utf-8:w ++enc=utf-8
}

vagrant_prepare() {
  if [[ -z "$1" ]]; then
    echo "No argument supplied"
  else
    cd ~/Vagrant/
    mkdir -p $1
    V_TEMPLATE=${1%%[0-9]*}
    if [[ -d 00_template/${V_TEMPLATE} ]]; then
      cp 00_template/${V_TEMPLATE}/Vagrantfile $1
    else
      cp 00_template/base/Vagrantfile $1
    fi
    cd $1
    print -z vagrant up
  fi
}

vagrant_diff() {
  DIRNAME=$(basename $(pwd))
  V_TEMPLATE=${DIRNAME%%[0-9]*}
  if [[ -d ../00_template/${V_TEMPLATE} ]]; then
    echo " === ${V_TEMPLATE}/Vagrantfile <-> Vagrantfile === "
    diff ../00_template/${V_TEMPLATE}/Vagrantfile Vagrantfile
  else
    echo " === base/Vagrantfile <-> Vagrantfile === "
    diff ../00_template/base/Vagrantfile Vagrantfile
  fi
}

YADM() {
  RED='\033[0;31m'
  GREEN='\033[0;32m'
  NC='\033[0m' # No Color
  echo -e "${GREEN}[+] YADM PULL${NC}"
  yadm pull; 
  yadm commit -am "auto-commit ${HOSTNAME}"; 
  yadm push

  echo
  echo -e "${GREEN}[+] PRIVYADM PULL${NC}"
  yadm --yadm-data $XDG_DATA_HOME/yadm/priv.git pull
  yadm --yadm-data $XDG_DATA_HOME/yadm/priv.git commit -am "auto-commit ${HOSTNAME}"
  yadm --yadm-data $XDG_DATA_HOME/yadm/priv.git push

  if [[ $EUID -eq 0 ]]; then
    echo
      echo -e "${RED}[+] SYSYADM PULL${NC}"
      yadm --yadm-data /etc/yadm/ pull
      yadm --yadm-data /etc/yadm/ commit -am "auto-commit ${HOSTNAME}"
      yadm --yadm-data /etc/yadm/ push
  fi
}
